<template>
    <view>
        <v-navbar :alldata='tabs' :activeIndex.sync='activeIndex' :sliderWidth='sliderWidth' @changeActiveIndex.user='changeActiveIndex'></v-navbar>
        <v-choice :class='{ hidden: activeIndex !== 0}' :choiceData.sync="choiceData"></v-choice>
        <v-moments :class='{ hidden: activeIndex !== 1}' :momentsData.sync="momentsData"></v-moments>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import { getFetch } from '@/modules/common/fetch'
    import navbarComponent from '@/components/navbar'
    import momentsComponent from './moments'
    import choiceComponent from './choice'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '森林风'
        }

        components = {
            'v-navbar': navbarComponent,
            'v-moments': momentsComponent,
            'v-choice': choiceComponent
        }

        data = {
            /* 顶部分类 */
            tabs: [{
                title: '精选'
            }, {
                title: '圈子'
            }],
            activeIndex: 0,
            sliderWidth: 93.75,
            choiceData: {
                banners: [],
                hotTopic: []
            },
            momentsData: {}
        }

        methods = {
            changeActiveIndex(activeIndex) {
                this.activeIndex = parseInt(activeIndex)
            }
        }

        async updateDiscoverData () {
            const response = await getFetch('/circles', { noAjax: true })
            this.choiceData = { hotTopic: response.hotTopic, banners: response.banners.posts }
            this.momentsData = response.circles && response.circles.data
        }
        async onLoad() {
            await this.updateDiscoverData()
            this.$apply()
        }
    }
</script>

<style lang="scss" scoped>
    .hidden {
        display: none;
    }
</style>
