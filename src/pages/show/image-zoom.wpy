<template>
    <view class="content">
        <view class="img" bindtouchstart="touchstartCallback" catchtouchmove="touchmoveCallback" catchtouchend="touchendCallback" style="height: {{scaleHeight}}px; width: {{scaleWidth}}px;">
            <image style="transform:translate({{stv.offsetX}}px, {{stv.offsetY}}px) scale({{stv.scale}});" src="{{url}}" @tap="back"></image>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: ''
            // navigationBarBackgroundColor: '#000000'
        }
        data = {
            url: '',
            scaleHeight: '',
            scaleWidth: '',
            stv: {
                offsetX: 0,
                offsetY: 0,
                zoom: false, // 是否缩放状态
                distance: 0,  // 两指距离
                scale: 1  // 缩放倍数
            }
        }
        methods = {
            back () {
                wepy.navigateBack()
            }
        }
        // 事件处理函数
        touchstartCallback (e) {
            // 触摸开始
            if (e.touches.length === 1) {
                let {clientX, clientY} = e.touches[0]
                this.startX = clientX
                this.startY = clientY
                this.touchStartEvent = e.touches
            } else {
                let xMove = e.touches[1].clientX - e.touches[0].clientX
                let yMove = e.touches[1].clientY - e.touches[0].clientY
                let distance = Math.sqrt(xMove * xMove + yMove * yMove)
                this.stv.distance = distance
                this.stv.zoom = true // 缩放状态
            }
        }
        touchmoveCallback (e) {
            // 触摸移动中
            // console.log('touchmoveCallback');
            // console.log(e);

            if (e.touches.length === 1) {
                // 单指移动
                if (this.data.stv.zoom) {
                    // 缩放状态，不处理单指
                    return
                }
                let {clientX, clientY} = e.touches[0]
                let offsetX = clientX - this.startX
                let offsetY = clientY - this.startY
                this.startX = clientX
                this.startY = clientY
                let {stv} = this.data
                stv.offsetX += offsetX
                stv.offsetY += offsetY
                stv.offsetLeftX = -stv.offsetX
                stv.offsetLeftY = -stv.offsetLeftY
                this.stv = stv
            } else {
                // 双指缩放
                let xMove = e.touches[1].clientX - e.touches[0].clientX
                let yMove = e.touches[1].clientY - e.touches[0].clientY
                let distance = Math.sqrt(xMove * xMove + yMove * yMove)

                let distanceDiff = distance - this.data.stv.distance
                let newScale = this.data.stv.scale + 0.01 * distanceDiff
                // 最小时不做缩放
                if (newScale <= 0.5) {
                    return
                }

                this.stv.distance = distance
                this.stv.scale = newScale
            }
        }
        touchendCallback (e) {
            // 触摸结束
            console.log('touchendCallback')
            console.log(e)

            if (e.touches.length === 0) {
                this.stv.zoom = false // 重置缩放状态
            }
        }
        onLoad (options) {
            this.url = options.url || 'https://images.ifanr.cn/wp-content/uploads/2016/11/feature-1.jpg'
            const systemInfo = wepy.getSystemInfoSync() // 获取系统信息的同步方法
            this.scaleHeight = systemInfo.windowWidth
            this.scaleWidth = systemInfo.windowHeight
        }
    }
</script>

<style lang="scss" scoped>
    .content {
        background: #000;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: 100%;
        .img {
            // overflow: hidden;
            width: 100%;
            image {
                height: 100%;
                width: 100%;
            }
        }
    }
    // .img {
    //     width: 100%;
    //     height: 500rpx;
    //     overflow: hidden;
    //     background: #AAA;
    //     image {
    //         height:400px;
    //     }
    // }

</style>
